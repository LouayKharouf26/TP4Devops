stages:
  - build_and_run
  - test_app

variables:
  POSTGRES_DB: student
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: admin
  SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/student
  SPRING_DATASOURCE_USERNAME: admin
  SPRING_DATASOURCE_PASSWORD: admin
  SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop

before_script:
  - apt-get update -y
  - apt-get install git -y
  - apt-get install curl -y
  - apt-get install jq -y
include:
  project: 'bl-drit/bl.drit.experiments/software.engineering/ecodesing/bl-eco-ci-energy-estimation'
  file: '/eco-ci-gitlab.yml' 
  ref: 'develop'

services:
  - name: postgres:13
    alias: postgres
    command: ["postgres", "-c", "log_statement=all"]

build_and_run:
  stage: build_and_run
  image: maven:3.8.1-jdk-11
  before_script:
    - apt-get update && apt-get install -y postgresql-client 
    - echo "Waiting for PostgreSQL to be ready..."
    - until PGPASSWORD=$POSTGRES_PASSWORD psql -h postgres -U $POSTGRES_USER -d $POSTGRES_DB -c "SELECT 1;" &>/dev/null; do sleep 2; done
    - echo "PostgreSQL is ready!"
    - mkdir -p logs  # Ensure logs directory exists
  script:
    - !reference [.start_measurement, script]  # Ensure this reference exists in included file
    - echo "Building the application..."
    - mvn clean package
    - export ECO_CI_LABEL="Measure compile"
    - !reference [.get_measurement, script]  # Ensure this reference exists in included file
  artifacts:
    paths:
      - eco-ci-output.txt
    reports:
      metrics: metrics.txt
test_job:
  stage: test_app
  image: maven:3.8.1-jdk-11
  before_script:
    - apt-get update && apt-get install -y postgresql-client git time
    - echo "Waiting for PostgreSQL to be ready..."
    - until PGPASSWORD=$POSTGRES_PASSWORD psql -h postgres -U $POSTGRES_USER -d $POSTGRES_DB -c "SELECT 1;" &>/dev/null; do sleep 2; done
    - echo "PostgreSQL is ready!"
    - mkdir -p logs  # Ensure logs directory exists
  script:
    - !reference [.start_measurement, script]  # Ensure this reference exists in included file
    - echo "testing the application..."
    - mvn clean test
    - export ECO_CI_LABEL="Measure compile"
    - !reference [.get_measurement, script]  # Ensure this reference exists in included file
    - !reference [.display_results, script]  # Ensure this reference exists in included file
  artifacts:
    paths:
      - eco-ci-output.txt
    reports:
      metrics: metrics.txt